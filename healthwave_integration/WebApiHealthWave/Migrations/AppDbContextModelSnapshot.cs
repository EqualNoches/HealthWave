// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiHealthWave.Context;

#nullable disable

namespace WebApiHealthWave.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AfeccionConsulta", b =>
                {
                    b.Property<int>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<int>("IdafeccionsIDAfeccion")
                        .HasColumnType("int");

                    b.HasKey("ConsultaCodigo", "IdafeccionsIDAfeccion");

                    b.HasIndex("IdafeccionsIDAfeccion");

                    b.ToTable("AfeccionConsulta");
                });

            modelBuilder.Entity("PerfilUsuarioServicio", b =>
                {
                    b.Property<string>("CodigoPacientesCodigoDocumento")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ServicioCodigosServicioCodigo")
                        .HasColumnType("int");

                    b.HasKey("CodigoPacientesCodigoDocumento", "ServicioCodigosServicioCodigo");

                    b.HasIndex("ServicioCodigosServicioCodigo");

                    b.ToTable("PerfilUsuarioServicio");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Afeccion", b =>
                {
                    b.Property<int>("IDAfeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAfeccion"));

                    b.Property<string>("Descripción")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("IngresoIDIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDAfeccion");

                    b.HasIndex("IngresoIDIngreso");

                    b.ToTable("Afecciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Aseguradora", b =>
                {
                    b.Property<int>("IDAseguradora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAseguradora"));

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Dirección")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Teléfono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDAseguradora");

                    b.ToTable("Aseguradoras");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Autorizacion", b =>
                {
                    b.Property<int>("IDAutorizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAutorizacion"));

                    b.Property<int?>("AseguradoraIDAseguradora")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAutorizacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDAseguradora")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoAutorizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.HasKey("IDAutorizacion");

                    b.HasIndex("AseguradoraIDAseguradora");

                    b.HasIndex("IDAseguradora");

                    b.ToTable("Autorizaciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Consulta", b =>
                {
                    b.Property<int>("ConsultaCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaCodigo"));

                    b.Property<int?>("AutorizacionIDAutorizacion")
                        .HasColumnType("int");

                    b.Property<string>("CodigoDocumentoMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPaciente")
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDAutorizacion")
                        .HasColumnType("int");

                    b.Property<int?>("IDConsultorio")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PerfilUsuarioCodigoDocumento")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ServicioCodigo")
                        .HasColumnType("int");

                    b.HasKey("ConsultaCodigo");

                    b.HasIndex("AutorizacionIDAutorizacion");

                    b.HasIndex("CodigoPaciente");

                    b.HasIndex("IDAutorizacion");

                    b.HasIndex("IDConsultorio");

                    b.HasIndex("PerfilUsuarioCodigoDocumento");

                    b.HasIndex("ServicioCodigo");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ConsultaAfeccion", b =>
                {
                    b.Property<int>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<int>("IDAfeccion")
                        .HasColumnType("int");

                    b.HasKey("ConsultaCodigo", "IDAfeccion");

                    b.HasIndex("IDAfeccion");

                    b.ToTable("ConsultaAfecciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ConsultaServicio", b =>
                {
                    b.Property<int>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<int>("ServicioCodigo")
                        .HasColumnType("int");

                    b.HasKey("ConsultaCodigo", "ServicioCodigo");

                    b.HasIndex("ServicioCodigo");

                    b.ToTable("ConsultaServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Consultorio", b =>
                {
                    b.Property<int>("IDConsultorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDConsultorio"));

                    b.Property<string>("Dirección")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Teléfono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDConsultorio");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.CuentaCobrar", b =>
                {
                    b.Property<int>("IDCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCuenta"));

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<string>("CodigoPaciente")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PerfilUsuarioCodigoDocumento")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDCuenta");

                    b.HasIndex("CodigoPaciente");

                    b.HasIndex("PerfilUsuarioCodigoDocumento");

                    b.ToTable("CuentasCobrar");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Factura", b =>
                {
                    b.Property<int>("FacturaCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaCodigo"));

                    b.Property<int>("CodigoMetodoDePago")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPaciente")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDCuenta")
                        .HasColumnType("int");

                    b.Property<int?>("IDIngreso")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoSubtotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<decimal>("MontoTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<string>("RNC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FacturaCodigo");

                    b.HasIndex("CodigoMetodoDePago");

                    b.HasIndex("CodigoPaciente");

                    b.HasIndex("ConsultaCodigo");

                    b.HasIndex("IDCuenta");

                    b.HasIndex("IDIngreso");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.FacturaProducto", b =>
                {
                    b.Property<int>("FacturaCodigoProducto")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDAutorizacion")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.HasKey("FacturaCodigoProducto", "IDProducto");

                    b.HasIndex("IDAutorizacion");

                    b.HasIndex("IDProducto");

                    b.ToTable("FacturaProductos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.FacturaServicio", b =>
                {
                    b.Property<int>("FacturaCodigoServicio")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<int?>("IDAutorizacion")
                        .HasColumnType("int");

                    b.Property<string>("ServicioCodigo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacturaCodigoServicio", "IDProducto");

                    b.HasIndex("IDAutorizacion");

                    b.HasIndex("IDProducto");

                    b.ToTable("FacturaServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Ingreso", b =>
                {
                    b.Property<int>("IDIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDIngreso"));

                    b.Property<string>("CodigoDocumentoMedico")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CodigoPaciente")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoEstancia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDAutorizacion")
                        .HasColumnType("int");

                    b.Property<int?>("NumSala")
                        .HasColumnType("int");

                    b.HasKey("IDIngreso");

                    b.HasIndex("CodigoDocumentoMedico");

                    b.HasIndex("CodigoPaciente");

                    b.HasIndex("ConsultaCodigo");

                    b.HasIndex("IDAutorizacion");

                    b.HasIndex("NumSala");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.IngresoAfeccion", b =>
                {
                    b.Property<int>("IDAfeccion")
                        .HasColumnType("int");

                    b.Property<int>("IDIngreso")
                        .HasColumnType("int");

                    b.HasKey("IDAfeccion", "IDIngreso");

                    b.HasIndex("IDIngreso");

                    b.ToTable("IngresoAfecciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.MetodoDePago", b =>
                {
                    b.Property<int>("CodigoMetodoDePago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoMetodoDePago"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CodigoMetodoDePago");

                    b.ToTable("MetodosDePago");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Pago", b =>
                {
                    b.Property<int>("IDPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPago"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCuenta")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.HasKey("IDPago");

                    b.HasIndex("IDCuenta");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.PerfilUsuario", b =>
                {
                    b.Property<string>("CodigoDocumento")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dirección")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Género")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumLicenciaMedica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Teléfono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("I");

                    b.Property<string>("UsuarioCodigo")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CodigoDocumento");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("PerfilUsuarios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.PrescripcionProducto", b =>
                {
                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("ConsultaCodigo")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IDProducto", "ConsultaCodigo");

                    b.HasIndex("ConsultaCodigo");

                    b.ToTable("PrescripcionProductos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Producto", b =>
                {
                    b.Property<int>("IDProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProducto"));

                    b.Property<string>("Descripción")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.HasKey("IDProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ReservaServicio", b =>
                {
                    b.Property<int>("ServicioCodigo")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPaciente")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ServicioCodigo", "CodigoPaciente");

                    b.HasIndex("CodigoPaciente");

                    b.ToTable("ReservaServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Sala", b =>
                {
                    b.Property<int>("NumSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumSala"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NumSala");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicioCodigo"));

                    b.Property<int?>("AseguradoraNavigationIDAseguradora")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<string>("Descripción")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("IDAseguradora")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TipoServicio")
                        .HasColumnType("int");

                    b.Property<int?>("TipoServicioId")
                        .HasColumnType("int");

                    b.HasKey("ServicioCodigo");

                    b.HasIndex("AseguradoraNavigationIDAseguradora");

                    b.HasIndex("IDAseguradora");

                    b.HasIndex("TipoServicio");

                    b.HasIndex("TipoServicioId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.TipoServicio", b =>
                {
                    b.Property<int>("TipoServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoServicioId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoServicioId");

                    b.ToTable("TipoServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Usuario", b =>
                {
                    b.Property<string>("UsuarioCodigo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DocumentoUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UsuarioContra")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UsuarioCodigo");

                    b.HasIndex("DocumentoUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AfeccionConsulta", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Consulta", null)
                        .WithMany()
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Afeccion", null)
                        .WithMany()
                        .HasForeignKey("IdafeccionsIDAfeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfilUsuarioServicio", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", null)
                        .WithMany()
                        .HasForeignKey("CodigoPacientesCodigoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Servicio", null)
                        .WithMany()
                        .HasForeignKey("ServicioCodigosServicioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Afeccion", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Ingreso", null)
                        .WithMany("Afecciones")
                        .HasForeignKey("IngresoIDIngreso");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Autorizacion", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Aseguradora", null)
                        .WithMany("Autorizacions")
                        .HasForeignKey("AseguradoraIDAseguradora");

                    b.HasOne("WebApiHealthWave.Models.Aseguradora", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("IDAseguradora")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Aseguradora");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Consulta", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Autorizacion", null)
                        .WithMany("Consultas")
                        .HasForeignKey("AutorizacionIDAutorizacion");

                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.Autorizacion", "Autorizacion")
                        .WithMany()
                        .HasForeignKey("IDAutorizacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.Consultorio", "Consultorio")
                        .WithMany()
                        .HasForeignKey("IDConsultorio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", null)
                        .WithMany("Consulta")
                        .HasForeignKey("PerfilUsuarioCodigoDocumento");

                    b.HasOne("WebApiHealthWave.Models.Servicio", null)
                        .WithMany("ConsultaCodigos")
                        .HasForeignKey("ServicioCodigo");

                    b.Navigation("Autorizacion");

                    b.Navigation("Consultorio");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ConsultaAfeccion", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Consulta", "Consulta")
                        .WithMany("ConsultaAfecciones")
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Afeccion", "Afeccion")
                        .WithMany("ConsultaAfecciones")
                        .HasForeignKey("IDAfeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afeccion");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ConsultaServicio", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Consulta", "Consulta")
                        .WithMany("ConsultaServicios")
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Servicio", "Servicio")
                        .WithMany("ConsultaServicios")
                        .HasForeignKey("ServicioCodigo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.CuentaCobrar", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "PerfilUsuario")
                        .WithMany("CuentasCobrar")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", null)
                        .WithMany("CuentaCobrars")
                        .HasForeignKey("PerfilUsuarioCodigoDocumento");

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Factura", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.MetodoDePago", "MetodoDePago")
                        .WithMany("Facturas")
                        .HasForeignKey("CodigoMetodoDePago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "Paciente")
                        .WithMany("Facturas")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.Consulta", "Consulta")
                        .WithMany("Facturas")
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.CuentaCobrar", "Cuenta")
                        .WithMany("Facturas")
                        .HasForeignKey("IDCuenta")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.Ingreso", "Ingreso")
                        .WithMany("Facturas")
                        .HasForeignKey("IDIngreso")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Consulta");

                    b.Navigation("Cuenta");

                    b.Navigation("Ingreso");

                    b.Navigation("MetodoDePago");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.FacturaProducto", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Factura", "Factura")
                        .WithMany("FacturaProductos")
                        .HasForeignKey("FacturaCodigoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Autorizacion", "Autorizacion")
                        .WithMany("FacturaProductos")
                        .HasForeignKey("IDAutorizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Producto", "Producto")
                        .WithMany("FacturaProductos")
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autorizacion");

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.FacturaServicio", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Factura", "Factura")
                        .WithMany("FacturaServicios")
                        .HasForeignKey("FacturaCodigoServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Autorizacion", "Autorizacion")
                        .WithMany("FacturaServicios")
                        .HasForeignKey("IDAutorizacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.Producto", "Producto")
                        .WithMany("FacturaServicios")
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autorizacion");

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Ingreso", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "Medico")
                        .WithMany("IngresosMedico")
                        .HasForeignKey("CodigoDocumentoMedico")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "Paciente")
                        .WithMany("IngresosPaciente")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.Consulta", "Consulta")
                        .WithMany("Ingresos")
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApiHealthWave.Models.Autorizacion", "Autorizacion")
                        .WithMany("Ingresos")
                        .HasForeignKey("IDAutorizacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.Sala", "Sala")
                        .WithMany("Ingresos")
                        .HasForeignKey("NumSala")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Autorizacion");

                    b.Navigation("Consulta");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.IngresoAfeccion", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Afeccion", "Afeccion")
                        .WithMany("IngresoAfecciones")
                        .HasForeignKey("IDAfeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Ingreso", "Ingreso")
                        .WithMany("IngresoAfecciones")
                        .HasForeignKey("IDIngreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afeccion");

                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Pago", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.CuentaCobrar", "Cuenta")
                        .WithMany("Pagos")
                        .HasForeignKey("IDCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.PerfilUsuario", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCodigo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.PrescripcionProducto", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Consulta", "Consulta")
                        .WithMany("PrescripcionProductos")
                        .HasForeignKey("ConsultaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Producto", "Producto")
                        .WithMany("PrescripcionProductos")
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.ReservaServicio", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "Paciente")
                        .WithMany("ReservaServicios")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiHealthWave.Models.Servicio", "Servicio")
                        .WithMany("ReservaServicios")
                        .HasForeignKey("ServicioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Servicio", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.Aseguradora", "AseguradoraNavigation")
                        .WithMany("Servicios")
                        .HasForeignKey("AseguradoraNavigationIDAseguradora");

                    b.HasOne("WebApiHealthWave.Models.Aseguradora", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("IDAseguradora")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.TipoServicio", "TipoServicioNavigation")
                        .WithMany()
                        .HasForeignKey("TipoServicio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiHealthWave.Models.TipoServicio", null)
                        .WithMany("Servicios")
                        .HasForeignKey("TipoServicioId");

                    b.Navigation("Aseguradora");

                    b.Navigation("AseguradoraNavigation");

                    b.Navigation("TipoServicioNavigation");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Usuario", b =>
                {
                    b.HasOne("WebApiHealthWave.Models.PerfilUsuario", "PerfilUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("DocumentoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Afeccion", b =>
                {
                    b.Navigation("ConsultaAfecciones");

                    b.Navigation("IngresoAfecciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Aseguradora", b =>
                {
                    b.Navigation("Autorizacions");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Autorizacion", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("FacturaProductos");

                    b.Navigation("FacturaServicios");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Consulta", b =>
                {
                    b.Navigation("ConsultaAfecciones");

                    b.Navigation("ConsultaServicios");

                    b.Navigation("Facturas");

                    b.Navigation("Ingresos");

                    b.Navigation("PrescripcionProductos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.CuentaCobrar", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Factura", b =>
                {
                    b.Navigation("FacturaProductos");

                    b.Navigation("FacturaServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Ingreso", b =>
                {
                    b.Navigation("Afecciones");

                    b.Navigation("Facturas");

                    b.Navigation("IngresoAfecciones");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.MetodoDePago", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.PerfilUsuario", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("Consultas");

                    b.Navigation("CuentaCobrars");

                    b.Navigation("CuentasCobrar");

                    b.Navigation("Facturas");

                    b.Navigation("IngresosMedico");

                    b.Navigation("IngresosPaciente");

                    b.Navigation("ReservaServicios");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Producto", b =>
                {
                    b.Navigation("FacturaProductos");

                    b.Navigation("FacturaServicios");

                    b.Navigation("PrescripcionProductos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Sala", b =>
                {
                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.Servicio", b =>
                {
                    b.Navigation("ConsultaCodigos");

                    b.Navigation("ConsultaServicios");

                    b.Navigation("ReservaServicios");
                });

            modelBuilder.Entity("WebApiHealthWave.Models.TipoServicio", b =>
                {
                    b.Navigation("Servicios");
                });
#pragma warning restore 612, 618
        }
    }
}
